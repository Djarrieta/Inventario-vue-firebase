crear una aplicacion con VUE y firebase

ubicarse en la carpeta donde deseamos trabajar
npm i -g @vue/cli
con esto vamos a trabajar con VUE CLI (command line interface)
vue create NOMBREDELPROYECTO
se seleccionan los features que se nececitan como router
in dedicated config files
save preset as NOMBRE de la configuracion que vas a guardar

Con esto ya el proyecto esta montado, ahora se puede correr en el navegador con

npm run serve
code . para abrir el visual studio code

vue add @ianaya89/tailwind
es un plugin de tailwind para configurar el framework de estilos tailwind en el proyecto vue lo más rápido posible 
agrega archivos de configuración js, plugins dentro de postcss y contenido en src, pero falta importar el archivo css que se acaba de crear.

A este punto se crean los componentes que van a ser reusados, como el header o el footer.
Todos estos componentes se llaman desde App.vue, que es de donde index.html obtiene todos su contenido.

Para poder hacer rutas, se necesita la dependencia Vue router que se obtiene instalando:
npm i -S vue-router
con esta instalacion se crea la dependencia visible en package.json

Ahora hay que crear un archivo router.js

npm install --save firebase
para instalar la dependencia a firebase

Con la extension de chrome al inspeccionar sale una ventana de vue que nos muestra en tiempo real los valores de data model para debbugiar
En el evento created de vue, se pueden obtener los datos que se necesitan para arrancar la aplicacion, como consultar los valores de vue.

los componentes padres le pasan informacion a los hijos por medio de propiedades
Los componentes hijos le pasan informacion a los padres por medio de eventos

los {{}} mustaches permiten una expresicon como  ok ? 'YES' : 'NO', message.split('').reverse().join('') 
pero no permiten 

<!-- esto es una declaración, no una expresión -->
{{ var a = 1 }}

<!-- El control de flujo tampoco funcionará, use expresiones ternarias -->
{{ if (ok) { return message } }}

Dentro del objeto computed se colocan las propiedades computadas
Dentro del objeto watch se colocan funciones que se ejecutan cuando una variable cambia
